---

AWSTemplateFormatVersion: '2010-09-09'

Description: >-
  This template deploys a general purpose VPC, with a pair of public (DMZ) and
  private subnets spread across two Availability Zones. It deploys an internet
  gateway, with a default route on the DMZ subnets. It deploys NAT gateways in
  the DMZ subnets (AZ1/2), with a default route on the private subnets. It
  deploys a Route53 internal hosted zone with a DHCP options set. It deploys a
  set of security groups, one with no ingress allowed, and another that allows
  intra-vpc and outbound network traffic.

# Metadata:

Parameters:
  VpcShortName:
    Description: A short name that is prefixed to VPC resource names
    Type: String
  PublicSubnet1Cidr:
    Description: The IP range (CIDR notation) for the DMZ subnet in the first Availability Zone
    Type: String
    AllowedPattern: ((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}
  PublicSubnet2Cidr:
    Description: The IP range (CIDR notation) for the DMZ subnet in the second Availability Zone
    Type: String
    AllowedPattern: ((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}
  HostedZoneName:
    Description: The domain name of the Route53 internal hosted zone
    Type: String
  HostedZoneRegion:
    Description: The associated VPC region of the Route53 internal hosted zone
    Type: String
  PrivateSubnet1Cidr:
    Description: The IP range (CIDR notation) for the PRIVATE subnet in the first Availability Zone
    Type: String
    AllowedPattern: ((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}
  PrivateSubnet2Cidr:
    Description: The IP range (CIDR notation) for the PRIVATE subnet in the second Availability Zone
    Type: String
    AllowedPattern: ((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}
  VpcCidr:
    Description: The IP range (CIDR notation) for this VPC
    Type: String
    AllowedPattern: ((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}

# Mappings:
# Conditions:
# Transform:

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} - VPC"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - IGW"
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - Public AZ1"
      VpcId: !Ref Vpc
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - Public AZ2"
      VpcId: !Ref Vpc
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet1Cidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - Private AZ1"
      VpcId: !Ref Vpc
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet2Cidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - Private AZ2"
      VpcId: !Ref Vpc
  NatGateway1Eip:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties:
      Domain: vpc
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1Eip.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - AZ1"
  NatGateway2Eip:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties:
      Domain: vpc
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2Eip.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - AZ2"
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - Public AZ1"
  PublicDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC Private AZ1"
  PrivateDefaultRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  PrivateSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC Private AZ2"
  PrivateDefaultRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  PrivateSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
  PrivateRoute53HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref HostedZoneName
      HostedZoneConfig:
        Comment: !Sub "${VpcShortName} VPC - Internal DNS Zone"
      VPCs:
        - VPCId: !Ref Vpc
          VPCRegion: !Ref HostedZoneRegion
  PrivateDhcpOptionSet:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: !Ref HostedZoneName
      DomainNameServers:
        - AmazonProvidedDNS
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC"
  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: no-ingress-sg
      GroupDescription: Security group with no ingress rule
      VpcId: !Ref Vpc
  InternalIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${VpcShortName} VPC - Internal Open"
      GroupDescription: !Sub "Allow intra-VPC and outbound with source ${VpcCidr}"
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidr
          Description: Allow all internal inbound
          FromPort: -1
          IpProtocol: '-1'
          ToPort: -1
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all internal outbound
          FromPort: -1
          IpProtocol: '-1'
          ToPort: -1
      Tags:
        - Key: Name
          Value: !Sub "${VpcShortName} VPC - Internal Security Group"
      VpcId: !Ref Vpc

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref Vpc
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
  PublicSubnets:
    Description: A list of the DMZ subnets
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
  PublicSubnet1:
    Description: A reference to the DMZ subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Description: A reference to the DMZ subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
  PrivateSubnets:
    Description: A list of the PRIVATE subnets
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
  PrivateSubnet1:
    Description: A reference to the PRIVATE subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
  PrivateSubnet2:
    Description: A reference to the PRIVATE subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
